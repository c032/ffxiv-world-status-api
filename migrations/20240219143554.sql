begin;

insert into migrations (id) values (20240219143554);

create schema ffxiv;

create table ffxiv.worldstatus_history (
	id
		bigint
		generated by default as identity
		primary key,

	created_at
		timestamp with time zone
		not null
		default current_timestamp,

	worldstatus_timestamp
		timestamp with time zone
		not null,

	worldstatus_version
		bigint
		generated always as ((worldstatus_data->>'version')::bigint) stored,

	worldstatus_data
		jsonb
		not null
		check ((worldstatus_data->>'version') ~ '^[0-9]+$')
);

comment on table ffxiv.worldstatus_history is 'Historic data for FFXIV world status.';
comment on column ffxiv.worldstatus_history.worldstatus_timestamp is 'Timestamp for when the value of the `worldstatus_data` was fetched.';
comment on column ffxiv.worldstatus_history.worldstatus_version is 'Version for the format of the `worldstatus_data` column.';
comment on column ffxiv.worldstatus_history.worldstatus_data is 'Raw data for FFXIV world status.';

create view ffxiv.worldstatus_v1 as (
	select
		t.batch_id batch_id,
		t.worldstatus_timestamp worldstatus_timestamp,
		t.jsonb_world_item->>'Group' world_group,
		t.jsonb_world_item->>'Name' world_name,
		t.jsonb_world_item->>'Category' world_category,
		t.jsonb_world_item->>'ServerStatus' world_status,
		(t.jsonb_world_item->>'CanCreateNewCharacters')::boolean can_create_new_characters
	from (
		select
			id batch_id,
			worldstatus_timestamp worldstatus_timestamp,
			jsonb_array_elements(worldstatus_data->'items') jsonb_world_item
		from (
			select *
			from ffxiv.worldstatus_history
			where worldstatus_version = 1
			order by id asc
		)
	) t
	order by
		batch_id asc,
		world_group asc,
		world_name asc
);

create materialized view ffxiv.worldstatus_v1_materialized as (
	select * from ffxiv.worldstatus_v1
);

create index on ffxiv.worldstatus_v1_materialized (batch_id);

refresh materialized view ffxiv.worldstatus_v1_materialized;

commit;
